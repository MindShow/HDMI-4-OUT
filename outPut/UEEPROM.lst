C51 COMPILER V9.51   UEEPROM                                                               05/29/2013 17:36:18 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UEEPROM
OBJECT MODULE PLACED IN .\outPut\UEEPROM.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE sii9135\UEEPROM.c LARGE BROWSE INCDIR(.\app;.\bsp;.\sii9135) DEBUG OBJECTEX
                    -TEND PRINT(.\outPut\UEEPROM.lst) TABS(2) PREPRINT(.\outPut\UEEPROM.i) OBJECT(.\outPut\UEEPROM.obj)

line level    source

   1          //------------------------------------------------------------------------------
   2          // Module Name: UEEPROM
   3          //
   4          // Module Description:  Reading/writing data from EEPROM
   5          //
   6          // Copyright © 2002-2005, Silicon Image, Inc.  All rights reserved.
   7          //
   8          // No part of this work may be reproduced, modified, distributed, transmitted,
   9          // transcribed, or translated into any language or computer format, in any form
  10          // or by any means without written permission of: Silicon Image, Inc.,
  11          // 1060 East Arques Avenue, Sunnyvale, California 94085
  12          //------------------------------------------------------------------------------
  13          #include "UEEPROM.h"
  14          
  15          static BYTE bEEPROMSlaveAddr;
  16          
  17          //------------------------------------------------------------------------------
  18          // Function Name: siiFindEEPROM
  19          // Function Description: Trys to find EEPROM at various slave addresses
  20          //
  21          // Accepts: none
  22          // Returns: none
  23          // Globals: none
  24          //------------------------------------------------------------------------------
  25          BYTE siiFindEEPROM( void ){
  26   1      
  27   1      BYTE bError = FALSE;
  28   1      
  29   1        if ( hlWaitForAck( EE_SLVADDR_1 , 100 ) )
  30   1          bEEPROMSlaveAddr = EE_SLVADDR_1;
  31   1        else if ( hlWaitForAck( EE_SLVADDR_2 , 100 ) )
  32   1          bEEPROMSlaveAddr = EE_SLVADDR_2;
  33   1        else
  34   1          bError = TRUE;
  35   1      
  36   1        return bError;
  37   1      }
  38          //------------------------------------------------------------------------------
  39          // Function Name: siiBlockReadEEPROM
  40          // Function Description: Reads block of Data from EEPROM
  41          //
  42          // Accepts: none
  43          // Returns: none
  44          // Globals: none
  45          //------------------------------------------------------------------------------
  46          BYTE siiBlockReadEEPROM( WORD Addr, BYTE NBytes, BYTE * Data ){
  47   1      
  48   1      BYTE bError;
  49   1      I2CShortCommandType I2CComm;
  50   1      
  51   1      
  52   1        I2CComm.SlaveAddr = bEEPROMSlaveAddr;
  53   1        I2CComm.Flags = 0;
  54   1        I2CComm.NBytes = NBytes;
C51 COMPILER V9.51   UEEPROM                                                               05/29/2013 17:36:18 PAGE 2   

  55   1        I2CComm.RegAddrL = Addr & 0xFF;
  56   1        I2CComm.RegAddrH = Addr >> 8;
  57   1      #ifdef _BIGEEPROM_
  58   1        bError = BlockRead_16BAS((I2CShortCommandType *)&I2CComm, Data);
  59   1      #else
                bError = hlBlockRead_8BAS((I2CShortCommandType *)&I2CComm, Data);
              #endif
  62   1        return bError;
  63   1      }
  64          //------------------------------------------------------------------------------
  65          // Function Name: siiBlockWriteEEPROM
  66          // Function Description: Write block of DATA into EEPROM
  67          //
  68          // Accepts: none
  69          // Returns: none
  70          // Globals: none
  71          //------------------------------------------------------------------------------
  72          
  73          void siiBlockWriteEEPROM ( WORD Addr, BYTE NBytes, BYTE * Data){
  74   1      I2CShortCommandType I2CComm;
  75   1      
  76   1        I2CComm.SlaveAddr = bEEPROMSlaveAddr;
  77   1        I2CComm.Flags = 0;
  78   1        I2CComm.NBytes = NBytes;
  79   1        I2CComm.RegAddrL = Addr & 0xFF;
  80   1        I2CComm.RegAddrH = Addr >> 8;
  81   1      #ifdef _BIGEEPROM_
  82   1        BlockWrite_16BAS((I2CShortCommandType *)&I2CComm, Data);
  83   1      #else
                hlBlockWrite_8BAS((I2CShortCommandType *)&I2CComm, Data);
              #endif
  86   1      
  87   1        hlWaitForAck( bEEPROMSlaveAddr , 100 );
  88   1      }
  89          //------------------------------------------------------------------------
  90          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
