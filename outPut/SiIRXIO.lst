C51 COMPILER V9.51   SIIRXIO                                                               05/29/2013 17:36:12 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE SIIRXIO
OBJECT MODULE PLACED IN .\outPut\SiIRXIO.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE sii9135\SiIRXIO.c LARGE BROWSE INCDIR(.\app;.\bsp;.\sii9135) DEBUG OBJECTEX
                    -TEND PRINT(.\outPut\SiIRXIO.lst) TABS(2) PREPRINT(.\outPut\SiIRXIO.i) OBJECT(.\outPut\SiIRXIO.obj)

line level    source

   1          //------------------------------------------------------------------------------
   2          // Module Name: SiIRXIO
   3          //
   4          // Module Description:  Reading and writing in SiI RX
   5          //
   6          // Copyright © 2002-2005, Silicon Image, Inc.  All rights reserved.
   7          //
   8          // No part of this work may be reproduced, modified, distributed, transmitted,
   9          // transcribed, or translated into any language or computer format, in any form
  10          // or by any means without written permission of: Silicon Image, Inc.,
  11          // 1060 East Arques Avenue, Sunnyvale, California 94085
  12          //------------------------------------------------------------------------------
  13          
  14          #include "SiIRXIO.h"
  15          //------------------------------------------------------------------------------
  16          // Function Name:  siiReadBlockHDMIRXP0
  17          // Function Description: Reads block of data from HDMI RX (page 0)
  18          //
  19          // Accepts: none
  20          // Returns: none
  21          // Globals: none
  22          //------------------------------------------------------------------------------
  23          void siiReadBlockHDMIRXP0 (BYTE bAddr, BYTE bNBytes, BYTE * pbData ){
  24   1      I2CShortCommandType I2CComm;
  25   1      
  26   1      
  27   1        I2CComm.SlaveAddr = RX_SLV0;
  28   1        I2CComm.Flags = 0;
  29   1        I2CComm.NBytes = bNBytes;
  30   1        I2CComm.RegAddrL = bAddr;
  31   1        hlBlockRead_8BAS((I2CShortCommandType *)&I2CComm, pbData);
  32   1      }
  33          //------------------------------------------------------------------------------
  34          // Function Name: siiReadBlockHDMIRXP1
  35          // Function Description: Reads block of data from HDMI RX (page 1)
  36          //
  37          // Accepts: none
  38          // Returns: none
  39          // Globals: none
  40          //------------------------------------------------------------------------------
  41          void siiReadBlockHDMIRXP1(BYTE bAddr, BYTE bNBytes, BYTE * pbData ){
  42   1      I2CShortCommandType I2CComm;
  43   1      
  44   1      
  45   1        I2CComm.SlaveAddr = RX_SLV1;
  46   1        I2CComm.Flags = 0;
  47   1        I2CComm.NBytes = bNBytes;
  48   1        I2CComm.RegAddrL = bAddr;
  49   1        hlBlockRead_8BAS((I2CShortCommandType *)&I2CComm, pbData);
  50   1      }
  51          
  52          //------------------------------------------------------------------------------
  53          // Function Name:  siiWriteBlockHDMIRXP0
  54          // Function Description: Writes block of data from HDMI RX (page 0)
C51 COMPILER V9.51   SIIRXIO                                                               05/29/2013 17:36:12 PAGE 2   

  55          //
  56          // Accepts: none
  57          // Returns: none
  58          // Globals: none
  59          //------------------------------------------------------------------------------
  60          void siiWriteBlockHDMIRXP0(BYTE bAddr, BYTE bNBytes, BYTE * pbData ){
  61   1      I2CShortCommandType I2CComm;
  62   1      
  63   1        I2CComm.SlaveAddr = RX_SLV0;
  64   1        I2CComm.Flags = 0;
  65   1        I2CComm.NBytes = bNBytes;
  66   1        I2CComm.RegAddrL = bAddr;
  67   1        hlBlockWrite_8BAS((I2CShortCommandType *)&I2CComm, pbData);
  68   1      }
  69          
  70          //------------------------------------------------------------------------------
  71          // Function Name: siiModifyBits
  72          // Function Description:  this function reads byte from i2c device, modifys bit
  73          //                        in the byte, then writes it back
  74          // Accepts: none
  75          // Returns: none
  76          // Globals: none
  77          //------------------------------------------------------------------------------
  78          void siiModifyBits( BYTE bSlaveAddr, BYTE bRegAddr, BYTE bModVal, BOOL qSet ){
  79   1      BYTE bRegVal;
  80   1      
  81   1          bRegVal = hlReadByte_8BA ( bSlaveAddr, bRegAddr );
  82   1          if ( qSet )
  83   1              bRegVal |= bModVal;
  84   1          else
  85   1              bRegVal &= (~bModVal);
  86   1          hlWriteByte_8BA ( bSlaveAddr, bRegAddr, bRegVal );
  87   1      }
  88          
  89          //------------------------------------------------------------------------------
  90          // Function Name: siiReadModWriteByte
  91          // Function Description:  Reads byte at bRegAddr from i2c device at bSlaveAddr
  92          //              Clears any bits set in bBitmask
  93          //              Sets any bits set in bNewValue
  94          //              Writes byte back to bRegAddr i2c device at bSlaveAddr
  95          // Accepts: none
  96          // Returns: none
  97          // Globals: none
  98          //------------------------------------------------------------------------------
  99          void siiReadModWriteByte (BYTE bSlaveAddr, BYTE bRegAddr, BYTE bBitMask, BYTE bNewValue) {
 100   1      
 101   1      //BYTE bRegVal;
 102   1      
 103   1      //  bRegVal = hlReadByte_8BA ( bSlaveAddr, bRegAddr );
 104   1      //  bRegVal &= ~bBitMask;
 105   1      //  bRegVal |= bNewValue;
 106   1      //  hlWriteByte_8BA ( bSlaveAddr, bRegAddr, bRegVal );
 107   1      
 108   1        hlWriteByte_8BA (bSlaveAddr, bRegAddr, (hlReadByte_8BA (bSlaveAddr, bRegAddr) & ~bBitMask) | bNewValue);
 109   1      }
 110          
 111          //------------------------------------------------------------------------------
 112          // Function Name:  siiWriteBlockHDMIRXP1
 113          // Function Description: Writes block of data from HDMI RX (page 1)
 114          //
 115          // Accepts: none
 116          // Returns: none
C51 COMPILER V9.51   SIIRXIO                                                               05/29/2013 17:36:12 PAGE 3   

 117          // Globals: none
 118          //------------------------------------------------------------------------------
 119          #ifdef _UNUSED_FUNC_
              void siiWriteBlockHDMIRXP1(BYTE bAddr, BYTE bNBytes, BYTE * pbData ){
              I2CShortCommandType I2CComm;
              
                I2CComm.Bus = BUS_1;
                I2CComm.SlaveAddr = RX_SLV1;
                I2CComm.Flags = 0;
                I2CComm.NBytes = bNBytes;
                I2CComm.RegAddrL = bAddr;
                hlBlockWrite_8BAS( ( I2CShortCommandType *)&I2CComm, pbData);
              }
              #endif // end _UNUSED_FUNC_
 131          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    245    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      31
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
