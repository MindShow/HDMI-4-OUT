C51 COMPILER V9.51   SIISW_IIC                                                             05/29/2013 17:36:12 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE SIISW_IIC
OBJECT MODULE PLACED IN .\outPut\SiISW_IIC.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE sii9135\SiISW_IIC.c LARGE BROWSE INCDIR(.\app;.\bsp;.\sii9135) DEBUG OBJECT
                    -EXTEND PRINT(.\outPut\SiISW_IIC.lst) TABS(2) PREPRINT(.\outPut\SiISW_IIC.i) OBJECT(.\outPut\SiISW_IIC.obj)

line level    source

   1          //------------------------------------------------------------------------------
   2          // Module Name:SiISW_IIC.c
   3          //
   4          // Module Description: this module dedicated for low level IIC routines
   5          //
   6          //
   7          // Copyright © 2002-2005, Silicon Image, Inc.  All rights reserved.
   8          //
   9          // No part of this work may be reproduced, modified, distributed, transmitted,
  10          // transcribed, or translated into any language or computer format, in any form
  11          // or by any means without written permission of: Silicon Image, Inc.,
  12          // 1060 East Arques Avenue, Sunnyvale, California 94085
  13          //------------------------------------------------------------------------------
  14          #include "SiISW_IIC.h"
  15          #include "SiIHAL.h"
  16          
  17          
  18          //-------------------------------------------------------------------------------
  19          BYTE GetI2CStatus( void ){
  20   1      BYTE Status;
  21   1      
  22   1          Status = 0;
  23   1          if( halGetSCLPin() )
  24   1              Status |= 0x01;
  25   1          if( halGetSDAPin() )
  26   1              Status |= 0x02;
  27   1          return Status;
  28   1      }
  29          
  30          //-------------------------------------------------------------------------------
  31          BYTE GetI2CState( void ){
  32   1      BYTE i,j;
  33   1      
  34   1          halSetSCLPin() ;
  35   1          for( i = 0; i < 10; i++ ){
  36   2              if( halGetSCLPin() ){
  37   3                  halSetSDAPin();
  38   3                  for( j = 0; j < 10; j++){
  39   4                      if( halGetSDAPin() )
  40   4                          return 0;   // OK
  41   4                  }
  42   3                  return 1;      // SCL OK, SDA someone pull down
  43   3              }
  44   2          }
  45   1          return 2;          // error, someone holds the SCL bus
  46   1      }
  47          
  48          //-----------------------------------------------------------------------------------
  49          void _I2CSCLHigh( void ) {       // set SCL high, and wait for it to go high
  50   1      register int err;
  51   1      
  52   1          halSetSCLPin();
  53   1          while ( !halGetSCLPin() ){
  54   2              err++;
C51 COMPILER V9.51   SIISW_IIC                                                             05/29/2013 17:36:12 PAGE 2   

  55   2              if ( !err ) {
  56   3            //_i2c_error &= 0x02;     // SCL stuck, something's holding it down
  57   3                  return;
  58   3              }
  59   2          }
  60   1      }
  61          
  62          //-------------------------------------------------------------------------------
  63          // First I2C Port
  64          BYTE I2CSendByte( BYTE bt ){
  65   1      register unsigned char i;
  66   1      unsigned char error=0; // if error =1 then there was an error in getting ACK
  67   1      
  68   1          for ( i = 0; i < 8; i++) {
  69   2              if (bt & 0x80)
  70   2                  halSetSDAPin();      // send each bit, MSB first
  71   2              else
  72   2                  halClearSDAPin();
  73   2              _I2CSCLHigh();
  74   2              halClearSCLPin() ;
  75   2              bt = bt << 1;
  76   2          }
  77   1          halSetSDAPin();                       // listen for ACK
  78   1          _I2CSCLHigh();
  79   1          if ( halGetSDAPin() )
  80   1              error=1;
  81   1          halClearSCLPin() ;
  82   1          return( error ); // return 0 if no error, else return 1
  83   1      }
  84          //------------------------------------------------------------------------------
  85          BYTE I2CSendAddr( BYTE addr, BYTE rd ){
  86   1      volatile unsigned char x = 0;   //YMA included wilma partial fix for PD issue
  87   1          halSetSCLPin() ;
  88   1        x++;
  89   1          halClearSDAPin();               // generate start
  90   1        x++;
  91   1          halClearSCLPin() ;
  92   1        x++;
  93   1          return I2CSendByte( addr+rd );  // send address byte
  94   1      }
  95          //----------------------------------------------------------------------------
  96          BYTE _I2CGetByte(BYTE lastone) { // lastone == 1 for last byte
  97   1      register unsigned char i, res;
  98   1      
  99   1          res = 0;
 100   1          for ( i = 0; i < 8; i++ ) {          // each bit at a time, MSB first
 101   2      
 102   2              _I2CSCLHigh();
 103   2              res *= 2;
 104   2              if ( halGetSDAPin() )
 105   2                  res++;
 106   2              halClearSCLPin() ;
 107   2      
 108   2          }
 109   1      
 110   1          if ( lastone )
 111   1              halSetSDAPin();           // send ACK according to 'lastone'
 112   1          else
 113   1              halClearSDAPin();
 114   1          _I2CSCLHigh();
 115   1          halClearSCLPin();
 116   1          halSetSDAPin();
C51 COMPILER V9.51   SIISW_IIC                                                             05/29/2013 17:36:12 PAGE 3   

 117   1          return  res;
 118   1      }
 119          
 120          void I2CSendStop( void ){
 121   1      
 122   1          halClearSDAPin();
 123   1          _I2CSCLHigh();
 124   1          halSetSDAPin();
 125   1      
 126   1      }
 127          //-----------------------------------------------------------------------------
 128          void MakeSCLPulses(BYTE Count ){
 129   1      BYTE i;
 130   1      
 131   1          if(!Count)
 132   1              return;
 133   1          for(i = 1; i <=Count; i++){
 134   2              halSetSCLPin();
 135   2              halSetSCLPin();
 136   2              halClearSCLPin();
 137   2              halClearSCLPin();
 138   2           }
 139   1           halSetSCLPin();
 140   1           halSetSCLPin();
 141   1      }
 142          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
