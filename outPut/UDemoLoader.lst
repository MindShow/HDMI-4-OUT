C51 COMPILER V9.51   UDEMOLOADER                                                           05/29/2013 17:36:18 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE UDEMOLOADER
OBJECT MODULE PLACED IN .\outPut\UDemoLoader.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE sii9135\UDemoLoader.c LARGE BROWSE INCDIR(.\app;.\bsp;.\sii9135) DEBUG OBJE
                    -CTEXTEND PRINT(.\outPut\UDemoLoader.lst) TABS(2) PREPRINT(.\outPut\UDemoLoader.i) OBJECT(.\outPut\UDemoLoader.obj)

line level    source

   1          //------------------------------------------------------------------------------
   2          // Module Name: DemoLoader
   3          //
   4          // Module Description:
   5          // 1. Search for key linked data module
   6          // 2. Reading command
   7          // 3. Executing command
   8          //
   9          // Copyright © 2002-2005, Silicon Image, Inc.  All rights reserved.
  10          //
  11          // No part of this work may be reproduced, modified, distributed, transmitted,
  12          // transcribed, or translated into any language or computer format, in any form
  13          // or by any means without written permission of: Silicon Image, Inc.,
  14          // 1060 East Arques Avenue, Sunnyvale, California 94085
  15          //------------------------------------------------------------------------------
  16          #include <stdio.h>
  17          
  18          
  19          #include "UDemoloader.h"
  20          #include "UEEPROM.h"
  21          
  22          //------------------------------------------------------------------------------
  23          // Function Name:   SearchAddressOfSelectedModule
  24          // Function Description:  Search for module selected by switcher through EEPROM
  25          //                        every module contains 512 bytes of data
  26          //                        if module found return module id, otherwise 0xFF
  27          //------------------------------------------------------------------------------
  28          BYTE SearchAddressOfSelectedModule ( BYTE bSwitchCode, WORD * wpLoaderModuleAddress ){
  29   1      BYTE abData[3];
  30   1      WORD wLoaderMapAddr;
  31   1      WORD wLoaderModuleAddress = 0;
  32   1      BYTE bLoaderMapSize;
  33   1      BYTE bError;
  34   1      BOOL qFound = FALSE;
  35   1      
  36   1      BYTE i;
  37   1      
  38   1          wLoaderMapAddr = SII_LOADAR_MAP_ADDR;
  39   1          bError = siiBlockReadEEPROM ( wLoaderMapAddr++, 1, &bLoaderMapSize );
  40   1          if ( (!bError) && ( bLoaderMapSize < 64 ) ) {
  41   2              for ( i = 0; i < bLoaderMapSize; i++ ){
  42   3                  siiBlockReadEEPROM ( wLoaderMapAddr, 3, abData );
  43   3                  if ( abData[0] == bSwitchCode ){
  44   4                      qFound = TRUE;
  45   4                      *wpLoaderModuleAddress = abData[1] | ( abData[2] << 8);
  46   4                      break;
  47   4                  }
  48   3                  wLoaderMapAddr +=3;
  49   3              }
  50   2          }
  51   1          if (!qFound )
  52   1              bError = 0xFF;
  53   1          return bError;
  54   1      }
C51 COMPILER V9.51   UDEMOLOADER                                                           05/29/2013 17:36:18 PAGE 2   

  55          //------------------------------------------------------------------------------
  56          // Function Name:  ExecuteI2C_NoAutoInc_Command
  57          // Function Description:  SiI_ReadAndWriteNoAutoInc command read data from EEPROM
  58          //                        and sends to I2C device
  59          //
  60          //------------------------------------------------------------------------------
  61          BYTE ExecuteI2C_NoAutoInc_Command( WORD * wpCommandAddress ){
  62   1      
  63   1      BYTE abData[16], i, NBytes, bError = FALSE;
  64   1      I2CShortCommandType I2C_Cmd;
  65   1      
  66   1          bError = siiBlockReadEEPROM ( * wpCommandAddress, 3, abData );
  67   1          if ( !bError ) {
  68   2      
  69   2              I2C_Cmd.SlaveAddr = abData[0];
  70   2              I2C_Cmd.Flags = 0;
  71   2              I2C_Cmd.NBytes = abData[2];
  72   2              I2C_Cmd.RegAddrL = abData[1];
  73   2              I2C_Cmd.RegAddrH = 0;
  74   2              * wpCommandAddress += 3; // move address on data area
  75   2              bError = siiBlockReadEEPROM ( * wpCommandAddress, I2C_Cmd.NBytes, abData );
  76   2              if ( !bError ) {
  77   3                  NBytes = I2C_Cmd.NBytes;
  78   3                  I2C_Cmd.NBytes = 1;
  79   3                  for ( i = 0; i < NBytes; i++) {
  80   4                      bError = hlBlockWrite_8BAS((I2CShortCommandType *)&I2C_Cmd, &abData[i] );
  81   4                      I2C_Cmd.RegAddrL++;
  82   4                  }
  83   3              }
  84   2          }
  85   1          * wpCommandAddress += NBytes; // Move address on next command
  86   1          return bError;
  87   1      }
  88          //------------------------------------------------------------------------------
  89          // Function Name:  ExecuteMoodule
  90          // Function Description:  Get Demo Loader commad and call execution of the command
  91          //                        if last command is 0xFF, then job has done, errors
  92          //                        terminates function
  93          //------------------------------------------------------------------------------
  94          BOOL ExecuteMoodule( WORD wModuleAddress ){
  95   1      BYTE bCommand, bError = FALSE;
  96   1      
  97   1      
  98   1          do {
  99   2              bError = siiBlockReadEEPROM ( wModuleAddress++, 1, &bCommand );
 100   2              if ( bCommand == SiI_ReadAndWriteNoAutoInc ) {
 101   3                  bError = ExecuteI2C_NoAutoInc_Command( &wModuleAddress );
 102   3              }
 103   2          }
 104   1          while ( (bCommand != 0xFF) && (!bError) );
 105   1          if ( bError )
 106   1              printf ("Errors");
 107   1          else
 108   1              printf ("Done");
 109   1          return bError;
 110   1      }
 111          //------------------------------------------------------------------------------
 112          // Function Name: siiDemoTaskLoader
 113          // Function Description: Call searching of Demo laoder command, call command execution
 114          //
 115          // Accepts: none
 116          // Returns: BYTE
C51 COMPILER V9.51   UDEMOLOADER                                                           05/29/2013 17:36:18 PAGE 3   

 117          // Globals: none
 118          //------------------------------------------------------------------------------
 119          BYTE siiDemoTaskLoader( BYTE bSwCode ){
 120   1      WORD wModuleAddress;
 121   1      BYTE bError;
 122   1          printf ("\n Start demo loader: ");
 123   1      
 124   1          bError = SearchAddressOfSelectedModule( bSwCode, &wModuleAddress );
 125   1          printf (" Switch %i ", (int) bSwCode );
 126   1          if ( !bError ){ // modume address cannot be Zero
 127   2              printf ( " Starting demo...");
 128   2              bError = ExecuteMoodule( wModuleAddress );
 129   2          }
 130   1          else {
 131   2              printf ("Demo not found\n");
 132   2          }
 133   1      
 134   1          return bError;
 135   1      }
 136          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    610    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =   ----      48
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
